@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using GymHub.Data.Models
@using GymHub.Common
@model ComplexModel<AddReviewInputModel, ProductInfoViewModel>
@{

}

@section AdditionalLinks{

    <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css" asp-append-version="true">
    <link href="~/css/ProductPageForOnlineShop.css" rel="stylesheet"  asp-append-version="true"/>
    <link href="/css/ProductPageCommentBox.css" rel="stylesheet"  asp-append-version="true"/>
    <!------ Include the above in your HEAD tag ---------->
}
@{
    var viewModel = Model.ViewModel;
    var inputModel = Model.InputModel;
}

<div class="product-comment-dimPage-container" hidden>
    <div class="product-comment-remove-popup-container container alert-danger">
        <h4>Are you sure you want to delete this comment?</h4>
        <h4>(This will delete all of the comment's replies. If a review comment, it will also delete that particular review from the user for this product)</h4>
        @if (this.User.IsInRole(GlobalConstants.AdminRoleName))
        {
            <div class="container product-comment-remove-justification-container">
                <label for="Justification" class="alert-danger">Reason for removal. This will be send to the user's email</label>
                <textarea name="Justification" class="product-comment-remove-justification-textarea" placeholder="Justify the removal of this comment.">@GlobalConstants.CommentRemovalJustificationText</textarea>
            </div>
        }
        <button class="alert-primary product-comment-close-button-popup">Cancel</button>
        <button type="submit" class="product-comment-remove-button-popup alert alert-danger">Remove</button>
    </div>
</div>

<div class="product-remove-dimPage-container" hidden>
    <div class="product-remove-popup-container container alert-danger">
        <h4>Are you sure you want to delete this product?</h4>
        <h4>(This will delete everything about this comment, including replies, ratings, images etc...)</h4>
        <button class="alert-primary product-close-button-popup">Cancel</button>
        <button type="submit" class="product-remove-button-popup alert alert-danger">Remove</button>
    </div>
</div>


<div class="container-fluid">
    <div class="content-wrapper">
        <div class="item-container">
            <div class="container" style="padding-top:10px;">
                <div class="col-md-12">
                    <div class="product col-md-3 service-image-left">

                        <center>
                            <img id="item-display" class="product-mainImage" src="@viewModel.MainImage" alt="">
                        </center>
                    </div>

                    <div class="container service1-items col-sm-2 col-md-2 pull-left">
                        <center>
                            @for (int i = 0; i < 3; i++)
                            {
                                @if (viewModel.AdditionalImages.Count > i)
                                {
                                    <a id="item-1" class="service1-item">
                                        <img src="@viewModel.AdditionalImages[i].Image" class="product-additionalImage" alt="">
                                    </a>
                                }
                                else
                                {
                                    break;
                                }
                            }
                        </center>
                    </div>
                </div>

                <div class="col-md-7">
                    <div class="product-title">@viewModel.Name: @viewModel.Model</div>
                    @if (this.User.IsInRole(GlobalConstants.AdminRoleName))
                    {
                        <div class="btn-group product-remove-container">
                            <form method="post" asp-controller="Products" asp-action="Remove" class="product-remove-form">
                                <input type="hidden" name="productId" value="@viewModel.Id" />
                                <input type="hidden" id="productRemove_errorReturnUrl" name="errorReturnUrl" value="thisShouldBeThePageURL" />
                                <button type="submit" class="btn btn-danger product-remove-button">
                                    Remove
                                </button>
                                <div class="product-page-removeProduct-validationMessage-container">
                                    @Html.ValidationMessage("removeProduct_productId", new { @class = "alert-danger validation-message" })
                                </div>
                            </form>
                        </div>
                    }
                    <div class="product-desc">@viewModel.ShortDescription</div>
                    <div class="product-rating">
                        @{
                            var productRating = viewModel.ProductRating;
                        }
                        @for (int i = 0; i < productRating.FullStarsCount; i++)
                        {
                            <i class="fa fa-star gold"></i>
                        }
                        @if (productRating.HasHalfStar == true)
                        {
                            <i class="fa fa-star-half-o gold"></i>
                        }
                        @for (int i = 0; i < productRating.EmptyStarsCount; i++)
                        {
                            <i class="fa fa-star-o gold"></i>
                        }
                        <span> @productRating.AverageRating/10</span>
                    </div>
                    <hr>
                    <div class="container productPage-categories-container">
                        @foreach (var category in viewModel.ProductCategories)
                        {
                            <div class="productPage-category-container">
                                @category.Name
                            </div>
                        }
                    </div>
                    <div class="product-price">$ @viewModel.Price</div>
                    @if (viewModel.QuantityInStock > 0)
                    {
                        <div class="product-stock">In Stock: @viewModel.QuantityInStock</div>
                    }
                    else
                    {
                        <div class=".product-outOfStock alert-danger">Out of stock</div>
                    }
                    <hr>
                    <div class="btn-group cart product-page-addToCart-container">
                        <form method="post" class="product-page-addToCart-form">
                            <input type="hidden" name="ProductId" value="@viewModel.Id" />
                            <input type="hidden" name="quantityInStock" class="product-page-addToCart-quantityInStock" value="@viewModel.QuantityInStock" />
                            <button asp-controller="Carts" asp-action="AddToCart" type="submit" class="btn btn-success">
                                Add
                            </button>
                            <label for="Quantity" class="product-page-addToCart-quantity-label">Quantity:</label>
                            <input type="number" class="product-page-addToCart-quantity" name="Quantity" value="1" />
                            <div class="product-page-addToCart-validationMessage-container">
                                @Html.ValidationMessage("QuantityInStock", new { @class = "alert-danger validation-message" })
                                @Html.ValidationMessage("ProductId", new { @class = "alert-danger validation-message" })
                                @Html.ValidationMessage("Quantity", new { @class = "alert-danger validation-message" })
                            </div>
                        </form>
                    </div>
                    @if (this.User.IsInRole(GlobalConstants.AdminRoleName))
                    {
                        <div class="btn-group product-edit-container">
                            <form method="get" asp-controller="Products" asp-action="Edit" asp-route-productId="@viewModel.Id" class="product-edit-form">
                                <input type="hidden" name="productId" value="@viewModel.Id" />
                                <input type="hidden" id="productEdit_errorReturnUrl" name="errorReturnUrl" value="thisShouldBeThePageURL" />
                                <button type="submit" class="btn btn-warning product-edit-button">
                                    Edit
                                </button>
                                <div class="product-page-editProduct-validationMessage-container">
                                    @Html.ValidationMessage("editProduct_productId", new { @class = "alert-danger validation-message" })
                                </div>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="col-md-12 product-info">
                <ul id="myTab" class="nav nav-tabs nav_tabs">

                    <li><a asp-controller="Products" asp-action="ProductPage" asp-route-productId="@viewModel.Id" asp-fragment="Info" data-toggle="tab">Product info</a></li>
                    <li><a asp-controller="Products" asp-action="ProductPage" asp-route-productId="@viewModel.Id" asp-fragment="Reviews" data-toggle="tab">User reviews</a></li>

                </ul>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade" id="Info" name="Info">

                        <section class="container product-info">
                            @viewModel.Description
                        </section>

                    </div>
                    <div class="tab-pane fade" id="Reviews" name="Reviews">

                        <section class="container" style="margin-top: 10px;">
                            @if (viewModel.ReviewedByCurrentUser == false)
                            {
                                <div class="container">
                                    <div class="row">
                                        <h3>Add a review</h3>
                                    </div>

                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="widget-area no-padding blank product-comment-addReview-container">
                                                <span class="product-comment-addReview-ratings-container">
                                                    @if (inputModel != null)
                                                    {
                                                        @for (int i = 1; i <= inputModel.FullStarsCount; i++)
                                                        {
                                                            <i class="fa fa-star gold product-comment-addReview-rating" id="star-review-@i"></i>
                                                        }
                                                        @for (int i = inputModel.FullStarsCount + 1; i <= 10; i++)
                                                        {
                                                            <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-@i"></i>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-1"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-2"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-3"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-4"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-5"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-6"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-7"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-8"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-9"></i>
                                                        <i class="fa fa-star-o gold product-comment-addReview-rating" id="star-review-10"></i>
                                                    }
                                                </span>
                                                <span class="h4" id="span-rating">@(inputModel?.Rating != null ? inputModel.Rating : 0)/10</span>
                                                <div class="status-upload">
                                                    <form method="post" class="product-review-form">
                                                        <input type="hidden" value="@(inputModel?.Rating != null ? inputModel.Rating : 0)" asp-for="InputModel.Rating" />
                                                        <input type="hidden" asp-for="InputModel.ProductId" value="@Model.ViewModel.Id" />
                                                        <textarea placeholder="What are your thoughts?" asp-for="InputModel.Text"></textarea>
                                                        <span asp-validation-for="InputModel.Rating" class="alert-danger" style="display:block"></span>
                                                        <span asp-validation-for="InputModel.Text" class="alert-danger" style="display:block"></span>
                                                        <input type="hidden" value="" name="pageFragment" class="post-pageFragment" />
                                                        <button type="submit" class="btn btn-success green" asp-controller="ProductsComments" asp-action="AddReview"><i class="fa fa-share"></i>Add review</button>
                                                    </form>
                                                </div><!-- Status Upload  -->
                                            </div><!-- Widget Area -->
                                        </div>

                                    </div>
                                </div>
                                <hr />
                            }
                            <div class="product-comments-all">
                                <partial name="_ProductsLoadCommentsPartial.cshtml" for="@Model">
                            </div>
                            @if (viewModel.ParentsChildrenComments.Count > 0)
                            {
                                <div class="container">
                                    <nav aria-label="Page navigation example">
                                        <input hidden class="product-comment-numberOfPages" value="@viewModel.NumberOfCommentsPages" />
                                        <ul class="pagination product-comment-pagination">
                                            <li class="page-item product-comment-page-previous"><a class="page-link">Previous</a></li>
                                            @if (viewModel.NumberOfCommentsPages <= 18)
                                            {
                                                @for (int i = 1; i <= viewModel.NumberOfCommentsPages; i++)
                                                {
                                                    <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                }
                                            }
                                            else
                                            {
                                                @if (viewModel.CurrentCommentsPage <= 9 && viewModel.CurrentCommentsPage <= viewModel.NumberOfCommentsPages - viewModel.CurrentCommentsPage)
                                                {
                                                    @for (int i = 1; i <= 9; i++)
                                                    {
                                                        <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                    }
                                                    if (viewModel.NumberOfCommentsPages >= 14)
                                                    {
                                                        <li class="page-item product-comment-page-dots pageNumber=fromPrevious"><a class="page-link">...</a></li>
                                                    }
                                                    @for (int i = viewModel.NumberOfCommentsPages - 3; i <= viewModel.NumberOfCommentsPages; i++)
                                                    {
                                                        if (i > 9)
                                                        {
                                                            <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                        }
                                                    }
                                                }
                                                else if (viewModel.CurrentCommentsPage >= viewModel.NumberOfCommentsPages - 9)
                                                {
                                                    @for (int i = 1; i <= 3; i++)
                                                    {
                                                        <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                    }
                                                    if (viewModel.NumberOfCommentsPages >= 14)
                                                    {
                                                        <li class="page-item product-comment-page-dots pageNumber=fromNext"><a class="page-link">...</a></li>
                                                    }
                                                    @for (int i = viewModel.NumberOfCommentsPages - 9; i <= viewModel.NumberOfCommentsPages; i++)
                                                    {
                                                        if (i > 3)
                                                        {
                                                            <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                        }
                                                    }

                                                }
                                                else
                                                {
                                                    @for (int i = 1; i <= 3; i++)
                                                    {
                                                        <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                    }
                                                    <li class="page-item product-comment-page-dots pageNumber=fromNext"><a class="page-link">...</a></li>
                                                    @for (int i = viewModel.CurrentCommentsPage - 2; i <= viewModel.CurrentCommentsPage + 2; i++)
                                                    {
                                                        <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                    }
                                                    <li class="page-item product-comment-page-dots pageNumber=fromPrevious"><a class="page-link">...</a></li>
                                                    @for (int i = viewModel.NumberOfCommentsPages - 2; i <= viewModel.NumberOfCommentsPages; i++)
                                                    {
                                                        <li class="page-item product-comment-page-item"><a class="page-link">@i</a></li>
                                                    }
                                                }
                                            }
                                            <li class="page-item product-comment-page-next"><a class="page-link">Next</a></li>
                                        </ul>
                                    </nav>
                                </div>
                            }
                        </section>

                    </div>
                </div>
                <hr>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.1/js/bootstrap.min.js" asp-append-version="true"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js" asp-append-version="true"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js" asp-append-version="true"></script>

    @*My js page scripts*@
    <script src="/js/ProductPage/ProductCommentsShowRepliesButton.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductPageCommentBox.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductInfoReviewDynamicRating.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductPageURLFragments.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductEditComment.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductReplyComment.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductRemoveCommentPopup.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductCommentLike.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductPageCommentsPagination.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductCommentsOrdering.js" asp-append-version="true"></script>
    <script src="/js/ProductPage/ProductPageBuyingQuantity.js" asp-append-version="true"></script>
    <script src="~/js/ProductPage/RemoveProduct.js" asp-append-version="true"></script>

    <!--Shared scripts-->
    <script src="~/js/Shared/ChangeProductImage.js" asp-append-version="true"></script>

    <!--This one is last-->
    <script src="/js/ProductPage/ProductPageScripts.js" asp-append-version="true"></script>
    <partial name="_ValidationScriptsPartial.cshtml">
}
